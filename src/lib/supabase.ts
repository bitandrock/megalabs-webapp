import { createClient } from '@supabase/supabase-js';

// Client-side Supabase client
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;

export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
  },
});

// Server-side Supabase client with service role key
export const supabaseAdmin = createClient(
  supabaseUrl,
  process.env.SUPABASE_SERVICE_ROLE_KEY!,
  {
    auth: {
      autoRefreshToken: false,
      persistSession: false,
    },
  }
);

// Database types (will be auto-generated by Supabase CLI)
export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: number;
          firebase_uid: string | null;
          username: string;
          email: string;
          phone: string | null;
          is_service_center: boolean;
          is_activated: boolean;
          password: string | null; // For legacy migration
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          firebase_uid?: string | null;
          username: string;
          email: string;
          phone?: string | null;
          is_service_center?: boolean;
          is_activated?: boolean;
          password?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          firebase_uid?: string | null;
          username?: string;
          email?: string;
          phone?: string | null;
          is_service_center?: boolean;
          is_activated?: boolean;
          password?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      trainings: {
        Row: {
          id: number;
          title: string;
          description: string | null;
          content_url: string | null;
          duration: number | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          title: string;
          description?: string | null;
          content_url?: string | null;
          duration?: number | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          title?: string;
          description?: string | null;
          content_url?: string | null;
          duration?: number | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      user_trainings: {
        Row: {
          id: number;
          user_id: number;
          training_id: number;
          progress: number;
          completed_at: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          user_id: number;
          training_id: number;
          progress?: number;
          completed_at?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          user_id?: number;
          training_id?: number;
          progress?: number;
          completed_at?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      product_categories: {
        Row: {
          id: number;
          name: string;
          description: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          name: string;
          description?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          name?: string;
          description?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      products: {
        Row: {
          id: number;
          category_id: number;
          name: string;
          description: string | null;
          pdf_url: string | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          category_id: number;
          name: string;
          description?: string | null;
          pdf_url?: string | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          category_id?: number;
          name?: string;
          description?: string | null;
          pdf_url?: string | null;
          created_at?: string;
          updated_at?: string;
        };
      };
      faq_categories: {
        Row: {
          id: number;
          name: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          name: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          name?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
      faqs: {
        Row: {
          id: number;
          category_id: number | null;
          question: string;
          answer: string;
          order_index: number;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          category_id?: number | null;
          question: string;
          answer: string;
          order_index?: number;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          category_id?: number | null;
          question?: string;
          answer?: string;
          order_index?: number;
          created_at?: string;
          updated_at?: string;
        };
      };
      chat_topics: {
        Row: {
          id: number;
          user_id: number;
          assigned_to: number | null;
          title: string;
          status: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: number;
          user_id: number;
          assigned_to?: number | null;
          title: string;
          status?: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: number;
          user_id?: number;
          assigned_to?: number | null;
          title?: string;
          status?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
      chat_messages: {
        Row: {
          id: number;
          topic_id: number;
          user_id: number;
          message: string;
          created_at: string;
        };
        Insert: {
          id?: number;
          topic_id: number;
          user_id: number;
          message: string;
          created_at?: string;
        };
        Update: {
          id?: number;
          topic_id?: number;
          user_id?: number;
          message?: string;
          created_at?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      [_ in never]: never;
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
}

export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type Inserts<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert'];
export type Updates<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update'];

export default supabase;